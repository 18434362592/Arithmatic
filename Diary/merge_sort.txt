		The sort approach of divide and merge
  The basic theory of the approach is the Divide-and-Conquer in general. Firstly, we divide an complex problem into 
several subproblems, may be more. Afterwards, when these subproblems are small enough, however, just solve the subproblems
in a strightforward manner. Today, the sort approach uses the recursion to realize the goal of sort. Next, I will describe 
the details of implementations below.
  Firstly, we initial the Nums whose length is N as the array we will sort it. 
  Scendly, we divide the array into a number of subarrays that are small enough. Maybe you want to know when they are small 
 enough or how to implements it. Small enough is that sorts these subarrays easily when the subarray has one or two elements
(in thesemethod, there are one elements in the subarray).
  Then, conquer the subproblems by solving them recursively. In this approach, solving these problems are too easy that we 
have to do nothing for them. Yes, you are reading this correctly!
  Lastly, it is the key to success of the alogrithm. Combine the solutions to the subproblems into the solutions for the original 
problem. In the concrete implementation, we combine them by compare two subarray elements. For example, if we want to combine two
subarrays whose elements are sorted into one array, we can compare the elements one after another.
