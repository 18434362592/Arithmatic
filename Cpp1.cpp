#include<iostream.h>
#include<stdio.h>
#include<math.h>
#define M 100
void main()
{
	double a[4],a1[4],b[5],b1[5],c[5],K[5],K1[5],sum[M],A,kw1,JD,z=0.0,q=0.0,n=0.0,kw=7.296,P=70;
	int i,j,k=1,m=0;
    a[0]=25.5243,a[1]=33.1277,a[2]=33.0757,a[3]=9.3395;
    K[0]=3.293E-1,K[1]=5.354E-2,K[2]=2.472E-2,K[3]=5.489E-3,K[4]=5.073E-3;
	printf("SF-2火药的假定化学式：C25.5243H33.1277O33.0757N9.3395\n");
    for(i=0;i<5;i++)
		c[i]=0;
	    A=(kw*(a[0]+a[1]/2-a[2])+a[2])/(2*(kw-1));
	    b[0]=-A+sqrt(A*A+a[0]*(a[2]-a[0])/(kw-1));   
	    b[1]=a[0]-b[0];   
	    b[2]=a[2]-a[0]-b[0];   
	    b[3]=a[1]/2-b[2];   
	    b[4]=a[3]/2;
		printf("n=%d\n",k);     
		k++;      
		for(j=0;j<5;j++)      
			printf("%0.4f    ",b[j]);
		printf("\n");   
		for(j=0;j<5;j++)     
			printf("%0.4f    ",c[j]);   
		printf("\n");        
		for(i=0;i<5;i++)   
			q=q+b[i]+c[i];
		sum[0]=q;             
	

	do{		
		c[0]=sqrt(K[2]*b[3]/(P/sum[m]));
		printf("b is %.4lf",c[0]);
			c[1]=K[1]*b[2]/sqrt(b[3]*P/sum[m]);
			c[2]=(K[3]*b[2]*sqrt(b[4]))/(b[3]*sqrt(P/sum[m]));
			c[3]=K[4]*b[2]/(b[3]*P/sum[0]);
			c[4]=((K[0]*b[0])*(K[0]*b[0]))/(b[1]*b[1]*P/sum[m]);
		a[0]=a[0];
		
			a[1]=a[1]-c[0]-c[1];
			printf("b is %.4lf",a[1]);
			a[2]=a[2]-c[1]-c[2]-c[3]-2*c[4];	
	    	a[3]=a[3]-c[2];
		
				A=(kw*(a[0]+a[1]/2-a[2])+a[2])/(2*(kw-1));
				b1[0]=b[0];
				b1[1]=b[1];
				b1[2]=b[2];
				b1[3]=b[3];
				b1[4]=b[4];
			b[0]=-A+sqrt(A*A+a[0]*(a[2]-a[0])/(kw-1));
			//printf("b is %.4lf",A);
			b[1]=a[0]-b[0];
			b[2]=a[2]-a[0]-b[0];
			b[3]=a[1]/2-b[2];
			b[4]=a[3]/2; 
			a1[0]=b[0]+b[1];
			a1[1]=2*b[2]+2*b[3]+c[1]+c[0];
			a1[2]=2*b[0]+b[1]+b[2]+c[1]+2*c[4]+c[3]+c[2];
			a1[3]=2*b[4]+c[2];
            kw1=(b[1]*b[2])/(b[0]*b[3]);
            K1[0]=sqrt(c[4]*P/sum[m-1])*b[1]/b[0];
	     	K1[1]=c[1]*sqrt(b[3]*P/sum[m-1])/b[2];
			K1[2]=c[0]*c[0]*P/(b[3]*sum[m-1]);
		    K1[3]=c[2]*b[3]*sqrt(P/sum[m-1])/(b[2]*sqrt(b[4]));
			K1[4]=c[3]*b[3]*P/(sum[m-1]*b[2]);
		
			  /*c[0]=sqrt(K[2]*b[3]/(P/sum[m-1]));
						c[1]=K[1]*b[2]/sqrt(b[3]*P/sum[m-1]);
						c[2]=(K[3]*b[2]*sqrt(b[4]))/(b[3]*sqrt(P/sum[m-1]));
						c[3]=K[4]*b[2]/(b[3]*P/sum[m-1]);
						c[4]=((K[0]*b[0])*(K[0]*b[0]))/(b[1]*b[1]*P/sum[m-1]);*/	
						
				for(i=0;i<5;i++)   
			
				z=z+b[i]+c[i];   
				sum[m]=z;     
		        z=0.0;
			JD=sum[m]-sum[m-1];
			m++;
			if((a1[0]-25.5243<0.001)&&(a1[1]-33.1277<0.001)&&(a1[2]-33.0757<0.001)&&(a1[3]-9.3395<0.001))
			{
				if(kw-kw1<0.001)
				{
					if((K1[0]-K[0]<0.001)&&(K1[1]-K[1]<0.001)&&(K1[2]-K[2]<0.001)&&(K1[3]-K[3]<0.001)&&(K1[4]-K[4]<0.001))
					{
						printf("n=%d\n",k);
						k++;

						for(j=0;j<5;j++)
							printf("%0.4f    ",b[j]);
						printf("\n");
						for(j=0;j<5;j++)
							printf("%0.4f    ",c[j]);
						printf("\n");
					}
					else
						printf("验证出离解反应的平衡常数错误\n");
				}
				else
					printf("验证出平衡反应的平衡常数错误\n");
			}
			else
				printf("验证出C,H,O,N的物质的量错误\n");
	}while ((b1[0]-b[0]>0.001)||(b1[1]-b[1]>0.001)||(b1[2]-b[2]>0.001)||(b1[3]-b[3]>0.001)||(b1[4]-b[4]>0.001));
}
